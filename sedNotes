-n  <-- will suppress the default printing.
-i  <-- in place replacement (ensure to have backup!)

's/match/replace/g'

Some quick sed scripts
======================

Print only the matching back-reference part
-------------------------------------------

sed -n 's/^\s*discard\(want\)discar.*$/\1/p'


print from one patter to another
--------------------------------

sed -n '/pat1/,/pat2/p'
sed -n '1,/pat/p'    # print from beg-of-file to pat
sed -n '/pat/,$p'    # print from pat to end-of-file

prints from 2nd line, every 3rd line.
------------------------------------

sed -n '2~3p' <>

Remote color-codes form screen/tmux capture
-------------------------------------------

sed -r 's:\x1B\[[0-9;]*[mK]::g'

^m
sed -r 's:\x10::g'


Delete empty lines
-------------------

sed '/^$/d' myFile > tt


Not really SED but text stuff with other tools
==============================================

Use perl when sed doesn't cut it
--------------------------------

esp - greedy regex .*?

.. | perl -ne 's/regex/replace/' | ..
perl -ne -i 's/regex/replace/' file_to_work_inline

Find all non-ascii characters in a file
---------------------------------------

\grep --color=auto -n -P '[^\x00-\x7F]+' <file>

Grep source-files for cscope for a file-list
--------------------------------------------

egrep -i '\.([chlys](xx|pp)*|cc|hh|tcl|inc)$'

Delete all non-printing chars (but retain lines)
------------------------------------------------

cat file |   tr -dc '[\011\012\015\040-\176]' > result

#\015 is ^M

cat file |   tr -dc '[\011\012\040-\176]' > result

Print from nth line to end of file
----------------------------------

tail -n +2 <file>

Print till the nth line of file
-------------------------------

head -n -3 <file>

List a file wiht both hex and ascii
-----------------------------------

hexdump -C <file> | less

Using find
----------

List upto a certain depth

find -maxdepth 2 .
