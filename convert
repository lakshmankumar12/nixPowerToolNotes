# What is the size of the image
identify picture.jpeg

#convert pdf to image with good resultion
convert -density 300 file.pdf image.png

# To scale image
convert rose.jpg -size 1240x1754 rose.png

# To sclae in percentage
convert rose.jpg -resize 50% rose.png

# to just scale to a diff size
convert rose.jpg -resize 595x841\! scaled-rose.png

# split into 2 vertical halves:
convert -crop 50%x100% +repage input_image.jpg out%d_image.jpg

# rotate clockwise 90 degrees
convert orig.jpg -rotate "90" rotated.jpg
# rotate anti-clockwise 90 degrees
convert orig.jpg -rotate "-90" rotated.jpg

# Details on A4 size:
A4 is 210 x 297mm. <Millimeters>
An image is expressed in pixels x pixels.
The two are totally different things.
You can put an image of 210 x 297 pixels on an A4, but you can also put an image of 21000 x 29700 pixels on the same A4 sheet!
If it is to print on a standard low cost printer, use a RESOLUTION of 72 pixels per inch: make your image 595x841 pxls, 72pxls/inch
For a better result, use 150pxls/inch and an image of 1240 x 1754 pxls.
For professional results (ie a brochure), use 300pxl/inch and an image of 2480 x 3508 pxls.

#nokia size
1944x2592

#water marking
composite -dissolve 50% -quality 100 lnl.png fu.jpg output.jpg
composite -dissolve 50% -quality 100 mark.png orig.jpg mixed.jpg

In this command:
  composite : to combine two images
  -dissolve 50% : to make the overlay image (lnl.png) 50% transparent
  -quality 100 : keep the quality at 100%
   lnl.png : the image with the text
   fu.jpg : original picture
   output.jpg : the output image


#creating a watermark
gimp -> new
     -> advanced options -> background -> tranparent
                         -> size-> required size
     -> text box -> write ur text
     -> rotate -> rotate ur image
     -> move -> center it.
     -> export as png

#make an animated gif .. delay is in ms and -loop <n> loops n-times. 0 loops infinitely
convert -delay 120 -loop 0 *.png animated.gif


#make a terminal recording
https://github.com/icholy/ttygif

**
Steps
1. Start recording with ttyrec
2. type ^d to finish.
3. You will find whatever u did from 1-2 recorded in a ttyrec file.
4. Do ttygif <ttyrec-file>
5. You will find the temp-img dir and coverted files.. You can play with the delays and fine tune the gif.
6. Convert all files to jpg in a tmep dir
    mkdir jpg ; \ls *.xwd | while read i ; do b=${i%.*} ; convert $i jpg/$b.jpg ; done
7. And split the command in file(with taking backup) ..
    %s/-delay/\r-delay/g
    remove images that aren't needed .. Add delay to images as u choose
    And bring the command back into a line again
    %s/\n/ /g
8. Execute command
9. Repat 7&8 as many times necessary.

#or this
https://asciinema.org/
https://github.com/asciinema/asciinema
https://github.com/asciinema/asciinema-player

#to edit
https://asciinema.org/a/7445

script -f myfile.scr -ttimings
teseq -t timings myfile.scr > myfile.tsq
#vi myfile.tsq
#   | ..plain-text |
#   . or :  spl chars
#   & or "  you can safely delete these  ..   sed -i -e '/^&/d' -e '/^"/d' yourfile.tsq
#   @ delay. You can adjust this number!
#   add space in beginning to make them comments!
reseq --replay myfile.tsq
# to pack in asciinema
asciinema rec -c "reseq ..." -t "title" file.json
asciinema auth
asciinema upload file.json
docker run --rm -v $(pwd):/data asciinema/asciicast2gif -t solarized-dark demo.json demo.gif

#asciinema shipped with ubuntu is older
#best is 
* git clone the repo  .. cd asciinema
* sudo python3 ./setup.py install
* python3 -m asciinema rec -t "title" -w 2.0 file.json  # -w is the max wait arg
* python3 -m asciinema play file.json
* vi file.json                               # rinse repeat as many times as you want.
* python3 -m asciinema upload file.json      # you will get a url
* python3 -m asciinema auth                  # you will another url. If you click this url after logging in a browser, all recording uploaded will be claimed.


Editing asciinema
-----------------

Popular escape sequences

CSI - \u001b[  or \033[  or ESC[

CSI ?25l         -> hide cursor
CSI ?25h         -> show cursor
CSI n ; m H      -> move cursor to n,m
CSI ..;..;.. m   -> various. First number controls what next, typical are 30-37,40-47,38,48

CSI 34h          -> not clear
CSI ?<n>l        -> ??

Search and filter in vim - Highlight mark this:

\\u001b\[[0-9;]\{-}m
\\u001b\[?\?\d\{-}\(l\|h\)
\\u001b\[\d\{-};\d\{-}H

#gwy and elimitate the escape-char to see what's in.
%s/\\u001b\[[0-9;]\{-}m/‧/g
%s/\\u001b\[?\?\d\{-}\(l\|h\)/‧/g
%s/\\u001b\[\d\{-};\d\{-}H/‧/g


16:9 sizes
----------

Width      Height      Standard
640      360      nHD
720      405
848      480
60      540      qHD
1024      576
1280      720      HD
1366      768
1600      900      HD+
1920      1080      Full HD
2048      1152
2560      1440      QHD
2880      1620
3200      1800      QHD+
3840      2160      4K UHDTV
4096      2304
5120      2880      5K
7680      4320      8K UHDTV
15360      8640      16K

4:3 sizes
-----------

    40   x    30
    160   x    120
    140   x    192
    160   x    200
    160   x    256
    256   x    192
    280   x    192
    320   x    200
    320   x    240
    560   x    192
    384   x    288
    480   x    250
    400   x    300
    640   x    200
    640   x    256
    512   x    384
    640   x    350
    480   x    500
    720   x    348
    720   x    350
    640   x    400
    720   x    364
    640   x    480
    640   x    512
    800   x    600
    832   x    624
    960   x    720
    1024   x    768
    1024   x    800
    1120   x    832
    1152   x    864
    1280   x    960
    1400   x    1050
    1440   x    1080
    1600   x    1200
    1792   x    1344
    1856   x    1392
    1920   x    1440
    2048   x    1536
    2304   x    1728
    2560   x    1920
    2732   x    2048
    2800   x    2100
    3200   x    2400
    4096   x    3072
    6400   x    4800


